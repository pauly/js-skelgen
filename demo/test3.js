/**
 * generated by node,/home/paul/vows-skelgen/skelgen.js,demo/priceUtils.js,--output,demo/test3.js
 * https://github.com/pauly/vows-skelgen
 * Fri Aug 23 2013 13:07:25 GMT+0000 (UTC)
 */

var assert = require( 'assert' );
var vows = require( 'vows' );
var file = './priceUtils.js';
var priceUtils = require( file );

vows.describe( 'priceUtils' ).addBatch( {
  'priceUtils.getDiscountAsync': {
    'handles good input': {
      test0: {
        topic: function ( ) {
          priceUtils.getDiscountAsync( { price: 1000 }, this.callback );
        },
        callback: function( err, result ) {
          assert.deepEqual( err, null );
          var expected = null;
          assert.deepEqual( result, expected );
        }
      },
      test1: {
        topic: function ( ) {
          priceUtils.getDiscountAsync( { price: 900, discount: { originalPrice: 1000 }}, this.callback );
        },
        callback: function( err, result ) {
          assert.deepEqual( err, null );
          var expected = 100;
          assert.deepEqual( result, expected );
        }
      }
    },
    'handles malformed input': {
      'handles foo': {
        topic: function ( ) {
          priceUtils.getDiscountAsync( 'foo', this.callback );
        },
        callback: function ( err, result ) {
          console.log( 'priceUtils.getDiscountAsync', 'foo', 'returns', err, result );
          // assert.equal( err, null );
        }
      },
      'handles 66': {
        topic: function ( ) {
          priceUtils.getDiscountAsync( 66, this.callback );
        },
        callback: function ( err, result ) {
          console.log( 'priceUtils.getDiscountAsync', 66, 'returns', err, result );
          // assert.equal( err, null );
        }
      },
      'handles undefined': {
        topic: function ( ) {
          priceUtils.getDiscountAsync( undefined, this.callback );
        },
        callback: function ( err, result ) {
          console.log( 'priceUtils.getDiscountAsync', undefined, 'returns', err, result );
          // assert.equal( err, null );
        }
      },
      'handles null': {
        topic: function ( ) {
          priceUtils.getDiscountAsync( null, this.callback );
        },
        callback: function ( err, result ) {
          console.log( 'priceUtils.getDiscountAsync', null, 'returns', err, result );
          // assert.equal( err, null );
        }
      },
      'handles []': {
        topic: function ( ) {
          priceUtils.getDiscountAsync( [], this.callback );
        },
        callback: function ( err, result ) {
          console.log( 'priceUtils.getDiscountAsync', [], 'returns', err, result );
          // assert.equal( err, null );
        }
      },
      'handles {}': {
        topic: function ( ) {
          priceUtils.getDiscountAsync( {}, this.callback );
        },
        callback: function ( err, result ) {
          console.log( 'priceUtils.getDiscountAsync', {}, 'returns', err, result );
          // assert.equal( err, null );
        }
      },
      'handles new Date( )': {
        topic: function ( ) {
          priceUtils.getDiscountAsync( new Date( ), this.callback );
        },
        callback: function ( err, result ) {
          console.log( 'priceUtils.getDiscountAsync', new Date( ), 'returns', err, result );
          // assert.equal( err, null );
        }
      },
      'handles function ( ) { }': {
        topic: function ( ) {
          priceUtils.getDiscountAsync( 'function ( ) { }', this.callback );
        },
        callback: function ( err, result ) {
          console.log( 'priceUtils.getDiscountAsync', 'function ( ) { }', 'returns', err, result );
          // assert.equal( err, null );
        }
      }
    }
  }
} ).run( { }, function _allOK ( result ) {
  assert.equal( result.honored + result.pending, result.total );
  process.exit( 0 );
} );
