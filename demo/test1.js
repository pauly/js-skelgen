'use strict'
/**
 * generated by /Users/paulclarke/.nvm/versions/node/v10.22.0/bin/node,/Users/paulclarke/sites/js-skelgen/skelgen.js,demo/priceUtils.js,--output,demo/test1.js
 * https://github.com/pauly/vows-skelgen
 * Sat Jan 09 2021 17:44:55 GMT+0000 (Coordinated Universal Time)
 */

const expect = require('chai').use(require('dirty-chai')).expect
const file = './priceUtils.js'
const priceUtils = require(file)

describe('priceUtils.js', function () {
  describe('priceUtils.getDiscount', function () {
    it('handles good input', function () {
      expect(priceUtils.getDiscount({ price: 1000 })).to.deep.equal(null) // goodInputTests
      expect(priceUtils.getDiscount({ price: 900, discount: { originalPrice: 1000 } })).to.deep.equal(100) // goodInputTests
    })
    it('handles malformed input', function () {
      expect(function () {
        priceUtils.getDiscount(66)
        priceUtils.getDiscount(null)
        priceUtils.getDiscount([])
        priceUtils.getDiscount({})
      }).not.to.throw()
    })
  })
  describe('priceUtils.getDiscountAsync', function () {
    describe('good input', function () {
      it('test0', function (done) {
        priceUtils.getDiscountAsync({ price: 1000 }, function (err, result) {
          expect(err, 'expect no error; got ' + err).to.be.null()
          expect(result).to.deep.equal(null) // goodInputTestsAsync
          done()
        })
      })
      it('test1', function (done) {
        priceUtils.getDiscountAsync({ price: 900, discount: { originalPrice: 1000 } }, function (err, result) {
          expect(err, 'expect no error; got ' + err).to.be.null()
          expect(result).to.deep.equal(100) // goodInputTestsAsync
          done()
        })
      })
    })
    describe('malformed input', function () {
      it('handles 66', function (done) {
        priceUtils.getDiscountAsync(66, function () {
          expect(true).to.be.true()
          done()
        })
      })
      it('handles null', function (done) {
        priceUtils.getDiscountAsync(null, function () {
          expect(true).to.be.true()
          done()
        })
      })
      it('handles []', function (done) {
        priceUtils.getDiscountAsync([], function () {
          expect(true).to.be.true()
          done()
        })
      })
      it('handles {}', function (done) {
        priceUtils.getDiscountAsync({}, function () {
          expect(true).to.be.true()
          done()
        })
      })
    })
  })
})
